
# include global config
source ../_buildscripts/${current_repo}-${_arch}-cfg.conf

# build twice on icu updates, first without qt5-tools/make docs
pkgname=('qt5-base' 'qt5-base-docs')
pkgver=${qtver}
subver=${subver}
_pkgver=${_qtver}
pkgrel=2
arch=('x86_64')
url='http://qt-project.org/'
license=('GPL3' 'LGPL' 'FDL' 'custom')
makedepends=('sqlite' 'xcb-util-keysyms' 'xcb-util-wm' 'xcb-util-image' 'xcb-util-renderutil'
         'glib2' 'dbus' 'fontconfig' 'libsm' 'libxrandr' 'libxv' 'libxi' 'unixodbc' 'libjpeg-turbo'
         'alsa-lib' 'xdg-utils' 'hicolor-icon-theme' 'desktop-file-utils' 'mesa' 'systemd'
         'libxcursor' 'libxrender' 'libpng' 'mariadb' 'icu' 'libgl' 'libxfixes' 'libxinerama'
         'libxkbcommon' 'libinput' 'harfbuzz' 'mtdev'
         'postgresql-libs' 'cups' 'python2' 'gperf' 'ruby' 'pulseaudio' 'qt5-tools')
options=('!libtool' 'debug')
_pkgfqn="qtbase-everywhere-src-${subver}"
source=("${_qtmirror}/${_pkgver}/${subver}/submodules/${_pkgfqn}.tar.xz"
        "https://github.com/qt/qtbase/commit/f45c6c180463ccb6620e1d273a264f14a1204a93.diff")
#source=("https://download.qt-project.org/development_releases/qt/${_pkgver}/${subver}/submodules/${_pkgfqn}.tar.xz")
md5sums=(`grep ${_pkgfqn}.tar.xz ../qt.md5 | cut -d" " -f1`
         '0cd16ad7bc6b6e1b833d710f6fa5cc36')

build() {
    cd ${srcdir}/${_pkgfqn}
    
    # windows destroyed, example in sddm kcm
    #patch -p1 -i ${srcdir}/xcb.patch
    
    #sed -i 's|libs": "-lmysqlclient_r"|libs": "-lmariadb"|' src/sql/configure.json
    #sed -i 's|libs": "-lmysqlclient"|libs": "-lmariadb"|' src/sql/configure.json
    #sed -i 's|use_libmysqlclient_r|use_libmariadb|' src/sql/configure.json
        
    unset QTDIR
    export PATH="$PWD/qtbase/bin:$PWD/qtrepotools/bin:$PATH"

    ./configure -confirm-license -opensource \
                -prefix /usr \
                -bindir /usr/lib/qt5/bin \
                -headerdir /usr/include/qt5 \
                -archdatadir /usr/lib/qt5 \
                -docdir /usr/share/doc/qt5 \
                -plugindir /usr/lib/qt5/plugins \
                -importdir /usr/lib/qt5/imports \
                -qmldir /usr/lib/qt5/qml \
                -datadir /usr/share/qt5 \
                -testsdir /usr/share/qt5/tests \
                -translationdir /usr/share/qt5/translations \
                -sysconfdir /etc/xdg/qt5 \
                -examplesdir /usr/share/qt5/examples \
                -system-harfbuzz \
                -system-sqlite \
                -system-freetype \
                -openssl-linked \
                -nomake tests \
                -nomake examples \
                -optimized-qmake \
                -reduce-relocations \
                -dbus-linked \
                -feature-menu \
                -feature-textdate \
                -feature-ftp \
                -journald \
                -no-strip
                #-no-use-gold-linker
                #-opengl es2
     make
     make docs
}

package_qt5-base() {
    pkgdesc="A cross-platform application and UI framework"
    depends=('sqlite' 'xcb-util-keysyms' 'xcb-util-wm' 'xcb-util-image' 'xcb-util-renderutil'
             'glib2' 'dbus' 'fontconfig' 'libsm' 'libxrandr' 'libxv' 'libxi' 'unixodbc' 'libjpeg-turbo'
             'alsa-lib' 'xdg-utils' 'hicolor-icon-theme' 'desktop-file-utils' 'mesa' 'systemd'
             'libxcursor' 'libxrender' 'libpng' 'mariadb' 'icu' 'libgl' 'libxfixes' 'libxinerama'
             'libxkbcommon' 'libinput' 'harfbuzz' 'mtdev' 'libproxy')
    optdepends=('postgresql-libs: PostgreSQL driver')
    groups=('qt5')
    
    cd ${srcdir}/${_pkgfqn}
    make INSTALL_ROOT=$pkgdir install
	
    cd ${srcdir}
    install -D -m644 ${_pkgfqn}/LGPL_EXCEPTION.txt \
    ${pkgdir}/usr/share/licenses/qt5/LGPL_EXCEPTION.txt
    
    mkdir -p ${pkgdir}/usr/bin
    for i in $(ls ${pkgdir}/usr/lib/qt5/bin); do
        ln -s /usr/lib/qt5/bin/${i} ${pkgdir}/usr/bin/${i}-qt5
    done
}

package_qt5-base-docs() {
    pkgdesc="Documentation files for qt5-base"
    depends=('qt5-base')
    groups=('qt5-docs')
    
    cd ${srcdir}/${_pkgfqn}
    make INSTALL_ROOT=${pkgdir} install_docs
}
