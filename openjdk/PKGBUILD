
pkgname=('openjdk' 'openjdk-src')
pkgbase='openjdk'
_pkgver=17.0
_openjdk_build=11
_openjdk_update=9
pkgver="${_pkgver}.${_openjdk_build}.u${_openjdk_update}"
pkgrel=1
pkgdesc="An open-source implementation of the seventh edition of the Java SE Platform."
arch=('x86_64')
url="https://openjdk.org/"
license=('GPL2 with Classpath exception')
makedepends=('apache-ant' 'zip' 'unzip'
             'fastjar' 'cpio' 'cups' 'coreutils'
             'wget' 'gzip' 'alsa-lib' 'pulseaudio' 'zlib' 'libjpeg-turbo'
             'libpng' 'lcms2' 'freetype2' 'rhino' 'nss' 'libxt' 'pkg-config'
             'libxtst' 'libxp' 'libxrender' 'libxinerama' 'libxcomposite' 'pcsclite' 'giflib')

_jvmdir=/usr/lib/jvm/java-17-openjdk

source=("https://github.com/openjdk/jdk17u/archive/refs/tags/jdk-${_pkgver}.${_openjdk_build}+${_openjdk_update}.tar.gz"
        'openjdk.profile.sh'
        'openjdk.profile.csh')
sha256sums=('84e2e143dcab2160dcde3fe6d6b12d7d030533a5bce1aec0ac20d09c023deae0'
            'ec2221efc51182101bdb90aae30ad6b9ca6dae1edfcbc103aa1582b43b042622'
            'e4397e58b6267f3970278508ad7a3c9fbf4dfb915583df0865268b57ef5d3577')

build() {
  cd jdk17u-jdk-${_pkgver}.${_openjdk_build}-${_openjdk_update}

  unset CFLAGS
  unset CXXFLAGS
  unset LDFLAGS

  CFLAGS="-O3"
  export MAKEFLAGS=""

  chmod +x configure
  ./configure --prefix=/usr \
              --with-freetype=system \
              --with-giflib=system \
              --with-harfbuzz=system \
              --with-lcms=system \
              --with-libjpeg=system \
              --with-libpng=system \
              --with-native-debug-symbols=none \
              --with-vendor-name="KaOS" \
              --with-vendor-url="https://kaosx.us" \
              --with-vendor-bug-url="https://kaosx.us/bugs" \
              --with-vendor-vm-bug-url="https://bugs.openjdk.java.net" \
              --with-vendor-version-string="${_pkgver}.${_openjdk_build}" \
              --with-version-pre="" \
              --with-version-build="${_openjdk_update}" \
              --with-extra-cflags="${CFLAGS}" \
              --with-stdc++lib=dynamic \
              --with-jvm-features="zgc,shenandoahgc" \
              --disable-warnings-as-errors \
              --enable-full-docs=no \
              --enable-unlimited-crypto \
              --with-num-cores=16
  make images legacy-jre-image
}

package_openjdk() {
pkgdesc="An open-source implementation of the Java SE Platform."
provides=('java-environment' 'java-runtime')
depends=('alsa-lib' 'pulseaudio' 'giflib' 'libjpeg-turbo' 'libpng' 'freetype2')

  cd jdk17u-jdk-${_pkgver}.${_openjdk_build}-${_openjdk_update}/build/linux-x86_64-server-release/images/jdk

  # Copy the built OpenJDK image to the target directory
  install -d -m755 ${pkgdir}/${_jvmdir}
  cp -a bin include lib man release \
        ${pkgdir}/${_jvmdir#/}
  # permissions are not preserved
  #find ${pkgdir}/${_jvmdir#/} \! -type l \( -perm /111 -exec chmod 755 {} \; -o -exec chmod 644 {} \; \)
  
  # Remove the .zip file which is going to be inside openjdk-src
  rm ${pkgdir}/${_jvmdir#/}/lib/src.zip

  # Symlink the binaries into /usr/bin
  install -d -m755 ${pkgdir}/usr/bin
  pushd ${pkgdir}/${_jvmdir#/}/bin >/dev/null
    for executable in *; do
      ln -s ${_jvmdir}/bin/${executable} ${pkgdir}/usr/bin
    done
  popd >/dev/null

  # Move the manual pages in the right place
  install -d -m755 ${pkgdir}/usr/share/man/man2/
  mv ${pkgdir}/${_jvmdir#/}/man/man1/* ${pkgdir}/usr/share/man/man2/

  # Setup the shell profile dropin configuration
  install -D -m755 ${srcdir}/openjdk.profile.sh ${pkgdir}/etc/profile.d/openjdk.sh
  install -D -m755 ${srcdir}/openjdk.profile.csh ${pkgdir}/etc/profile.d/openjdk.csh

  # Install the license files
  #install -D -m644 ../../../../LICENSE ${pkgdir}/usr/share/licenses/${pkgname}/LICENSE
  install -dm 755 ${pkgdir}/usr/share/licenses
  cp -r legal ${pkgdir}/usr/share/licenses/${pkgname}
  ln -s ${pkgbase} ${pkgdir}/usr/share/licenses/${pkgname}
  ln -s /usr/share/licenses/${pkgname} ${pkgdir}/${_jvmdir}/legal

  rm -f ${pkgdir}${_jvmdir}/lib/security/cacerts
  ln -sf /etc/ssl/certs/java/cacerts ${pkgdir}${_jvmdir}/lib/security/cacerts

  install -dm 755 ${pkgdir}/etc
  cp -r conf ${pkgdir}/etc/${pkgname}
  ln -s /etc/${pkgname} ${pkgdir}/${_jvmdir}/conf
  
  # Install jre files
  cd ../jre
  install -d -m755 ${pkgdir}/${_jvmdir}/jre
  cp -a bin lib release \
        ${pkgdir}/${_jvmdir#/}/jre
}

package_openjdk-src() {
pkgdesc="An open-source implementation of the Java SE Platform. (Source package)"
arch=('x86_64')
depends=("openjdk=${pkgver}")

  cd jdk17u-jdk-${_pkgver}.${_openjdk_build}-${_openjdk_update}/build/linux-x86_64-server-release/images

  # Install the source package
  install -D -m644 jdk/lib/src.zip ${pkgdir}/${_jvmdir#/}/src.zip
}

